<setup>
    <block title="Slack Alert Action">
        <text>Default configuration for the Slack API. (Can be overriden when the alert is configured)</text>
    </block>

    <block title="Slack connection settings" endpoint="admin/alert_actions" entity="slackalert">
        <input field="param.proxy">
            <label>Proxy string</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          http://proxy_user:proxy_pass@proxy_server:proxy_port<BR>
          proxy_user, proxy_pass and proxy_port are optional<BR>
          proxy_user and proxy_pass default to empty<BR>
          proxy_port defaults to the default port for the protocol (80 for http and 443 for https)
        ]]></text>

        <input field="param.url">
            <label>Webhook URL</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          In order to obtain the Webhook URL you have to create a new incoming webhook integration for you Slack instance.
          See <a href="https://api.slack.com/incoming-webhooks">Incoming Webhooks Docs</a> for details.
        ]]></text>

        <input field="param.hooktoken">
            <label>Webhook token</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          This is the default token that will be used if no token is defined for a specific alert.
        ]]></text>
    </block>

    <block title="Mandatory settings" endpoint="admin/alert_actions" entity="slackalert">
        <input field="param.severity">
            <label>Severity Field</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          Enter the default fieldname from the search results that contains the alert type. Defaults to field name severity.
        ]]></text>

        <input field="param.message_fld">
            <label>Message Field</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          Enter the default fieldname from the search results that contains the message. Defaults to field name message.
        ]]></text>

        <input field="param.message">
            <label>Message</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          Enter the default message. If both Message Field and Message are entered, the Message Field is used. If the Message Fiedl does not exist in the search, the Message is used.
        ]]></text>
    </block>

    <block title="Optional settings" endpoint="admin/alert_actions" entity="slackalert">
        <input field="param.channel">
            <label>Default Channel</label>
            <type>text</type>
        </input>
        <text><![CDATA[
           Can start with # (channel) or @ (person). Prefix defaults to # if omitted.
           Channel defaults to the channel configured for the webhook you use.
           If the channel starts with an @, the user will receive the message in the Slackbot channel.
        ]]></text>
    </block>

    <block title="Alert color settings" endpoint="admin/alert_actions" entity="slackalert">
        <input field="param.severity_default">
            <label>Default message color</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          The default alert color (HTML color name, rgb(r,g,b) format or HEX format)
        ]]></text>

        <input field="param.severity_list">
            <label>Severity colors</label>
            <type>text</type>
        </input>
        <text><![CDATA[
          JSON notation for color per severity (HTML color name, rgb(r,g,b) format or HEX fwrmat) For example: { "CRIT": "#FF0000", "WARN": "orange" }
        ]]></text>
    </block>

    <block title="Additional fields" endpoint="admin/alert_actions" entity="slackalert">
        <text><![CDATA[
 		The fields below are used to create the message send to Slack.<BR><BR>
                Enter the values for these Slack message fields. Either use direct value,
		a splunk token (i.e. $result.fieldname$) or a field macro (i.e. {fieldname})<BR><BR>
                For an explanation of these fields, have a look at the
		<a target=_blank href="https://api.slack.com/docs/message-attachments">Slack API message attachments</a>.
        ]]></text>

        <input field="param.author_icon">
            <label>author_icon</label>
            <type>text</type>
        </input>
        <input field="param.author_name">
            <label>author_name</label>
            <type>text</type>
        </input>
        <input field="param.author_link">
            <label>author_link</label>
            <type>text</type>
        </input>
        <input field="param.fallback">
            <label>fallback</label>
            <type>text</type>
        </input>
        <input field="param.footer">
            <label>footer</label>
            <type>text</type>
        </input>
        <input field="param.footer_icon">
            <label>footer_icon</label>
            <type>text</type>
        </input>
        <input field="param.icon_emoji">
            <label>icon_emoji</label>
            <type>text</type>
        </input>
        <input field="param.icon_url">
            <label>icon_url</label>
            <type>text</type>
        </input>
        <input field="param.image_url">
            <label>image_url</label>
            <type>text</type>
        </input>
        <input field="param.pretext">
            <label>pretext</label>
            <type>text</type>
        </input>
        <input field="param.text">
            <label>text</label>
            <type>text</type>
        </input>
        <input field="param.thumb_url">
            <label>thumb_url</label>
            <type>text</type>
        </input>
        <input field="param.title">
            <label>title</label>
            <type>text</type>
        </input>
        <input field="param.title_link">
            <label>title_link</label>
            <type>text</type>
        </input>
        <input field="param.ts">
            <label>ts</label>
            <type>text</type>
        </input>
        <input field="param.username">
            <label>username</label>
            <type>text</type>
        </input>
    </block>
</setup>
